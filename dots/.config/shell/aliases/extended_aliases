# Some fancy extended aliases that are only meant for local machines.
# Written by Tiger Sachse.

# Use TMUX to create multiple panes in one window.
layout() {
  if [ $# -eq 0 ]; then
    return
  elif [ $# -eq 1 ]; then
    columns=$1
    secondary_panes=0
  else
    columns=$1
    secondary_panes=$2

    # Chop extra secondary panes.
    if [ $secondary_panes -gt $columns ]; then
      secondary_panes=$columns
    fi
  fi

  # Create all necessary columns then even out the spacing.
  for column in $(seq 2 $columns); do
    tmux split-pane -h > /dev/null 2>&1

    # If tmux can't create a new pane, revise the columns count and update
    # the secondary_panes count if necessary.
    if [ $? -ne 0 ]; then
      columns=$column
      if [ $secondary_panes -ge $columns ]; then
        secondary_panes=`expr $columns - 1`
      fi
      break
    fi
  done
  tmux select-layout even-horizontal

  # Create secondary panes starting from right to left.
  for secondary_pane in $(seq 1 $secondary_panes); do
    tmux split-pane -v
    tmux select-pane -L
  done

  # Reset the focus to the original pane.
  tmux select-pane -t 0
}

# Mount various remote shares.
mt() {
  if [ $# -lt 1 ]; then
    print_error "no mount name provided"

    return 1
  fi

  mount_name="$1"
  case "$mount_name" in
    "kumo")
      sshfs kumo:/google/src/cloud/tgsachse/google3/google3 "$HOME/kumo"
      print_info "mounted kumo"
      ;;
    "dropbox")
      for attempt in 1 2 3 4 5 6 7 8 9 10; do
        dbxfs "$HOME/dropbox"
        sleep .1
        ls "$HOME/dropbox" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
          print_info "mounted dropbox"
          break
        else
          sleep .3
          umt dropbox
          print_info "failed to mount dropbox, retrying"
          sleep .3
        fi
      done
      ;;
    *)
      print_error "invalid mount name provided"
      return 1
      ;;
  esac
}

# Unmount various remote shares.
umt() {
  if [ $# -lt 1 ]; then
    print_error "no unmount name provided"

    return 1
  fi

  unmount_name="$1"
  case "$unmount_name" in
    "kumo")
      umount "$HOME/kumo"
      ;;
    "dropbox")
      fusermount -u "$HOME/dropbox"
      ;;
    *)
      print_error "invalid unmount name provided"
      return 1
      ;;
  esac
}
